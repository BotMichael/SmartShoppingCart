# -*- coding: utf-8 -*-

# Form implementation generated from reading rpi1 file 'main.rpi1'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget, QPushButton

import sys
from Edge_Client_Interface import Edge_Client_Interface


class ui_Menu(QMainWindow):
    def __init__(self):
        super(ui_Menu, self).__init__()
        self.init_ui()
        self.cart = {}
        self.total_price = 0
        
    def init_ui(self):
        self.setObjectName("MainWindow")
        self.resize(450, 600)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.Welcome_banner = QtWidgets.QLabel(self.centralwidget)
        self.Welcome_banner.setGeometry(QtCore.QRect(30, 10, 391, 91))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(60)
        self.Welcome_banner.setFont(font)
        self.Welcome_banner.setObjectName("Welcome_banner")
        
        self.SALE = QtWidgets.QPushButton(self.centralwidget)
        self.SALE.setGeometry(QtCore.QRect(70, 130, 300, 90))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(36)
        self.SALE.setFont(font)
        self.SALE.setObjectName("SALE")
        
        self.MAP = QtWidgets.QPushButton(self.centralwidget)
        self.MAP.setGeometry(QtCore.QRect(70, 240, 300, 90))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(36)
        self.MAP.setFont(font)
        self.MAP.setObjectName("MAP")
        
        self.FIND_ITEM = QtWidgets.QPushButton(self.centralwidget)
        self.FIND_ITEM.setGeometry(QtCore.QRect(70, 350, 300, 90))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(36)
        self.FIND_ITEM.setFont(font)
        self.FIND_ITEM.setObjectName("FIND_ITEM")
        
        self.CART = QtWidgets.QPushButton(self.centralwidget)
        self.CART.setGeometry(QtCore.QRect(70, 460, 300, 90))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(36)
        self.CART.setFont(font)
        self.CART.setObjectName("CART")
        
        self.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

        self.SALE.clicked.connect(self.slot_btn_SALE_function)
        self.MAP.clicked.connect(self.slot_btn_MAP_function)
        self.FIND_ITEM.clicked.connect(self.slot_btn_FIND_ITEM_function)
        self.CART.clicked.connect(self.slot_btn_CART_function)

    def slot_btn_SALE_function(self):
        self.hide()
        from TopSale import ui_Top_Sale
        self.f = ui_Top_Sale()
        self.f.show()
        
    def slot_btn_MAP_function(self):
        self.hide()
        from Map import ui_Map
        self.f = ui_Map()
        self.f.show()
        
    def slot_btn_FIND_ITEM_function(self):
        self.hide()
        from FIND import ui_Find_Item
        self.f = ui_Find_Item()
        self.f.show()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Welcome_banner.setText(_translate("MainWindow", "Welcome!"))
        self.SALE.setText(_translate("MainWindow", "TOP SALE"))
        self.MAP.setText(_translate("MainWindow", "MAP"))
        self.FIND_ITEM.setText(_translate("MainWindow", "FIND ITEM"))
        self.CART.setText(_translate("MainWindow", "CART"))

    def slot_btn_CART_function(self):
        self.hide()

        self._scan()





        
        from MyCart import ui_Cart
        self.f = ui_Cart()
        self.f.show()

    def _scan(self) -> "message_dict":
        Edge_Client_Interface.sendRequestToFog(template.format(self.id, "activate", {"device": "rpi2_000"}))
        #  Get the reply.
        f = open("receipt.txt","w")
        
        message = Edge_Client_Interface.getReplyFromFog()
        if message["status"] == 0:
            print("Success.")
            self.cart = message["content"]["item"]
            self.total_price = message["content"]["price"]

            f.write(f"Total Price: {self.total_price}\n")
            for key in self.cart:
                if key != "price":
                    num   = self.cart[key]["num"]
                    price = self.cart[key]["price"]
                    f.write(f"{key}: {num} x ${price}")
        else:
            print("Error:", message["content"]["msg"])
        f.close()
        return message

